{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\alvar\\\\Desktop\\\\programeiyon\\\\react\\\\crwn-clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Desktop\\\\programeiyon\\\\react\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\with-spinner\\\\with-spinner.component.jsx\";\nimport { SpinnerContainer, SpinnerOverlay } from \"./with-spinner.styles\";\nimport React from \"react\";\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = (_ref) => {\n    let isLoading = _ref.isLoading,\n        otherProps = _objectWithoutProperties(_ref, [\"isLoading\"]);\n\n    return isLoading ? React.createElement(SpinnerOverlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(SpinnerContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    })) : React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  };\n\n  return Spinner;\n}; //ARE THE SAME\n// const WithSpinner = WrappedComponent => ({ isLoading, ...otherProps });\n//     return isLoading ? (\n//         <SpinnerOverlay>\n//             <SpinnerContainer />\n//         </SpinnerOverlay>\n//     ) : (\n//         <WrappedComponent {...otherProps} />\n//     );\n\n\nexport default WithSpinner;","map":{"version":3,"sources":["C:\\Users\\alvar\\Desktop\\programeiyon\\react\\crwn-clothing\\client\\src\\components\\with-spinner\\with-spinner.component.jsx"],"names":["SpinnerContainer","SpinnerOverlay","React","WithSpinner","WrappedComponent","Spinner","isLoading","otherProps"],"mappings":";;AAAA,SAASA,gBAAT,EAA2BC,cAA3B,QAAiD,uBAAjD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI;AACtC,QAAMC,OAAO,GAAG,UAAkC;AAAA,QAA/BC,SAA+B,QAA/BA,SAA+B;AAAA,QAAjBC,UAAiB;;AAChD,WAAOD,SAAS,GACd,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADc,GAKd,oBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF;AAOD,GARD;;AASA,SAAOF,OAAP;AACD,CAXD,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,WAAf","sourcesContent":["import { SpinnerContainer, SpinnerOverlay } from \"./with-spinner.styles\";\r\n\r\nimport React from \"react\";\r\n\r\nconst WithSpinner = WrappedComponent => {\r\n  const Spinner = ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n      <SpinnerOverlay>\r\n        <SpinnerContainer />\r\n      </SpinnerOverlay>\r\n    ) : (\r\n      <WrappedComponent {...otherProps} />\r\n    );\r\n  };\r\n  return Spinner;\r\n};\r\n//ARE THE SAME\r\n// const WithSpinner = WrappedComponent => ({ isLoading, ...otherProps });\r\n//     return isLoading ? (\r\n//         <SpinnerOverlay>\r\n//             <SpinnerContainer />\r\n//         </SpinnerOverlay>\r\n//     ) : (\r\n//         <WrappedComponent {...otherProps} />\r\n//     );\r\n\r\nexport default WithSpinner;\r\n"]},"metadata":{},"sourceType":"module"}