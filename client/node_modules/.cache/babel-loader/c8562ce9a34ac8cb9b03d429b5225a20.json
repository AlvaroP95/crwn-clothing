{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Desktop\\\\programeiyon\\\\react\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\cart-icon\\\\cart-icon.component.jsx\";\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport \"./cart-icon.styles.scss\";\nimport { connect } from \"react-redux\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport React from \"react\";\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\n\nconst CartIcon = ({\n  toggleCartHidden,\n  itemCount\n}) => {\n  return React.createElement(\"div\", {\n    className: \"cart-icon\",\n    onClick: toggleCartHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(ShoppingIcon, {\n    className: \"shopping-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"item-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, itemCount));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  //20. Selectors in Redux. 21. Reselect Library\n  //Selectors allow components to not re-render whenever mapStateToProps is called. Components render only when the corresponding values/state updates\n  itemCount: selectCartItemsCount\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["C:\\Users\\alvar\\Desktop\\programeiyon\\react\\crwn-clothing\\client\\src\\components\\cart-icon\\cart-icon.component.jsx"],"names":["connect","toggleCartHidden","React","selectCartItemsCount","createStructuredSelector","CartIcon","itemCount","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AACA,OAAO,yBAAP;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,wBAAT,QAAyC,UAAzC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEJ,EAAAA,gBAAF;AAAoBK,EAAAA;AAApB,CAAD,KAAqC;AACpD,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEL,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BK,SAA9B,CAFF,CADF;AAMD,CAPD;;AAQA,MAAMC,eAAe,GAAGH,wBAAwB,CAAC;AAC/C;AACA;AACAE,EAAAA,SAAS,EAAEH;AAHoC,CAAD,CAAhD;;AAKA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,gBAAgB,EAAE,MAAMQ,QAAQ,CAACR,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACO,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CH,QAA7C,CAAf","sourcesContent":["import { ReactComponent as ShoppingIcon } from \"../../assets/shopping-bag.svg\";\r\nimport \"./cart-icon.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\r\nimport React from \"react\";\r\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nconst CartIcon = ({ toggleCartHidden, itemCount }) => {\r\n  return (\r\n    <div className=\"cart-icon\" onClick={toggleCartHidden}>\r\n      <ShoppingIcon className=\"shopping-icon\" />\r\n      <span className=\"item-count\">{itemCount}</span>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n  //20. Selectors in Redux. 21. Reselect Library\r\n  //Selectors allow components to not re-render whenever mapStateToProps is called. Components render only when the corresponding values/state updates\r\n  itemCount: selectCartItemsCount\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleCartHidden: () => dispatch(toggleCartHidden())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\r\n"]},"metadata":{},"sourceType":"module"}